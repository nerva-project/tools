<Project>
  <PropertyGroup>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <RootNamespace>Tools</RootNamespace>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>portable</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>../../Bin/$(Configuration)</OutputPath>
    <DefineConstants>DEBUG;</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <Optimize>true</Optimize>
    <OutputPath>../../Bin/$(Configuration)</OutputPath>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="System.Net.Sockets" Version="*"/>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="../../External/AngryWasp.Serializer/Src/AngryWasp.Serializer/AngryWasp.Serializer.csproj" />
    <ProjectReference Include="../../External/AngryWasp.Cryptography/Src/AngryWasp.Cryptography/AngryWasp.Cryptography.csproj" />
    <ProjectReference Include="../../External/Nerva.Levin.CSharp/Src/Nerva.Levin/Nerva.Levin.csproj" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="../../LICENSE.txt">
      <Link>AngryWasp.LICENSE.txt</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="../../External/Nerva.Identity/AngryWasp.asc">
      <Link>AngryWasp.asc</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
</Project>